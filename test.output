Terminals which are not used

   IF
   EQ
   WWDDIWU
   SEMICOLON


State 9 conflicts: 1 shift/reduce
State 28 conflicts: 1 shift/reduce
State 39 conflicts: 1 shift/reduce
State 55 conflicts: 1 shift/reduce
State 58 conflicts: 8 shift/reduce


Grammar

    0 $accept: entry $end

    1 list: OBR innerlist CBR

    2 innerlist: element PIPE listodervar
    3          | element

    4 element: listodervar
    5        | listodervar COMMA endingelement
    6        | /* empty */

    7 endingelement: listodervar
    8              | listodervar COMMA endingelement

    9 listodervar: intodervar
   10            | list

   11 intodervar: INT
   12           | VAR
   13           | OPA INT CPA

   14 entry: functionselect DOT LF entry
   15      | slash

   16 functionselect: function CD rulelist
   17               | function

   18 rulelist: statement COMMA rulelist
   19         | statement

   20 @1: /* empty */

   21 statement: @1 math
   22          | function

   23 @2: /* empty */

   24 statement: VAR @2 mathsym math

   25 @3: /* empty */

   26 statement: VAR IS @3 statement

   27 math: math mathsym math
   28     | intodervar

   29 mathsym: GTE
   30        | LTE
   31        | LT
   32        | GT
   33        | PLUS
   34        | MINUS
   35        | MULTIPLY
   36        | DIVIDE

   37 @4: /* empty */

   38 function: LABEL @4 OPA args CPA

   39 args: args COMMA args
   40     | intodervar
   41     | LABEL
   42     | list


Terminals, with rules where they appear

$end (0) 0
error (256)
IS (258) 26
GT (259) 32
LT (260) 31
LTE (261) 30
GTE (262) 29
DIVIDE (263) 36
MULTIPLY (264) 35
MINUS (265) 34
PLUS (266) 33
LABEL (267) 38 41
INT (268) 11 13
VAR (269) 12 24 26
OPA (270) 13 38
CPA (271) 13 38
COMMA (272) 5 8 18 39
IF (273)
EQ (274)
PIPE (275) 2
LF (276) 14
WWDDIWU (277)
OBR (278) 1
CBR (279) 1
DOT (280) 14
CD (281) 16
SEMICOLON (282)
slash (283) 15


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
list (30)
    on left: 1, on right: 10 42
innerlist (31)
    on left: 2 3, on right: 1
element (32)
    on left: 4 5 6, on right: 2 3
endingelement (33)
    on left: 7 8, on right: 5 8
listodervar (34)
    on left: 9 10, on right: 2 4 5 7 8
intodervar (35)
    on left: 11 12 13, on right: 9 28 40
entry (36)
    on left: 14 15, on right: 0 14
functionselect (37)
    on left: 16 17, on right: 14
rulelist (38)
    on left: 18 19, on right: 16 18
statement (39)
    on left: 21 22 24 26, on right: 18 19 26
@1 (40)
    on left: 20, on right: 21
@2 (41)
    on left: 23, on right: 24
@3 (42)
    on left: 25, on right: 26
math (43)
    on left: 27 28, on right: 21 24 27
mathsym (44)
    on left: 29 30 31 32 33 34 35 36, on right: 24 27
function (45)
    on left: 38, on right: 16 17 22
@4 (46)
    on left: 37, on right: 38
args (47)
    on left: 39 40 41 42, on right: 38 39


state 0

    0 $accept: . entry $end
   14 entry: . functionselect DOT LF entry
   15      | . slash
   16 functionselect: . function CD rulelist
   17               | . function
   38 function: . LABEL @4 OPA args CPA

    LABEL  shift, and go to state 1
    slash  shift, and go to state 2

    entry           go to state 3
    functionselect  go to state 4
    function        go to state 5


state 1

   37 @4: .
   38 function: LABEL . @4 OPA args CPA

    $default  reduce using rule 37 (@4)

    @4  go to state 6


state 2

   15 entry: slash .

    $default  reduce using rule 15 (entry)


state 3

    0 $accept: entry . $end

    $end  shift, and go to state 7


state 4

   14 entry: functionselect . DOT LF entry

    DOT  shift, and go to state 8


state 5

   16 functionselect: function . CD rulelist
   17               | function .  [DOT]

    CD  shift, and go to state 9

    $default  reduce using rule 17 (functionselect)


state 6

   38 function: LABEL @4 . OPA args CPA

    OPA  shift, and go to state 10


state 7

    0 $accept: entry $end .

    $default  accept


state 8

   14 entry: functionselect DOT . LF entry

    LF  shift, and go to state 11


state 9

   16 functionselect: function CD . rulelist
   18 rulelist: . statement COMMA rulelist
   19         | . statement
   20 @1: .  [INT, VAR, OPA]
   21 statement: . @1 math
   22          | . function
   24          | . VAR @2 mathsym math
   26          | . VAR IS @3 statement
   38 function: . LABEL @4 OPA args CPA

    LABEL  shift, and go to state 1
    VAR    shift, and go to state 12

    VAR       [reduce using rule 20 (@1)]
    $default  reduce using rule 20 (@1)

    rulelist   go to state 13
    statement  go to state 14
    @1         go to state 15
    function   go to state 16


state 10

    1 list: . OBR innerlist CBR
   11 intodervar: . INT
   12           | . VAR
   13           | . OPA INT CPA
   38 function: LABEL @4 OPA . args CPA
   39 args: . args COMMA args
   40     | . intodervar
   41     | . LABEL
   42     | . list

    LABEL  shift, and go to state 17
    INT    shift, and go to state 18
    VAR    shift, and go to state 19
    OPA    shift, and go to state 20
    OBR    shift, and go to state 21

    list        go to state 22
    intodervar  go to state 23
    args        go to state 24


state 11

   14 entry: . functionselect DOT LF entry
   14      | functionselect DOT LF . entry
   15      | . slash
   16 functionselect: . function CD rulelist
   17               | . function
   38 function: . LABEL @4 OPA args CPA

    LABEL  shift, and go to state 1
    slash  shift, and go to state 2

    entry           go to state 25
    functionselect  go to state 4
    function        go to state 5


state 12

   23 @2: .  [GT, LT, LTE, GTE, DIVIDE, MULTIPLY, MINUS, PLUS]
   24 statement: VAR . @2 mathsym math
   26          | VAR . IS @3 statement

    IS  shift, and go to state 26

    $default  reduce using rule 23 (@2)

    @2  go to state 27


state 13

   16 functionselect: function CD rulelist .

    $default  reduce using rule 16 (functionselect)


state 14

   18 rulelist: statement . COMMA rulelist
   19         | statement .  [DOT]

    COMMA  shift, and go to state 28

    $default  reduce using rule 19 (rulelist)


state 15

   11 intodervar: . INT
   12           | . VAR
   13           | . OPA INT CPA
   21 statement: @1 . math
   27 math: . math mathsym math
   28     | . intodervar

    INT  shift, and go to state 18
    VAR  shift, and go to state 19
    OPA  shift, and go to state 20

    intodervar  go to state 29
    math        go to state 30


state 16

   22 statement: function .

    $default  reduce using rule 22 (statement)


state 17

   41 args: LABEL .

    $default  reduce using rule 41 (args)


state 18

   11 intodervar: INT .

    $default  reduce using rule 11 (intodervar)


state 19

   12 intodervar: VAR .

    $default  reduce using rule 12 (intodervar)


state 20

   13 intodervar: OPA . INT CPA

    INT  shift, and go to state 31


state 21

    1 list: . OBR innerlist CBR
    1     | OBR . innerlist CBR
    2 innerlist: . element PIPE listodervar
    3          | . element
    4 element: . listodervar
    5        | . listodervar COMMA endingelement
    6        | .  [PIPE, CBR]
    9 listodervar: . intodervar
   10            | . list
   11 intodervar: . INT
   12           | . VAR
   13           | . OPA INT CPA

    INT  shift, and go to state 18
    VAR  shift, and go to state 19
    OPA  shift, and go to state 20
    OBR  shift, and go to state 21

    $default  reduce using rule 6 (element)

    list         go to state 32
    innerlist    go to state 33
    element      go to state 34
    listodervar  go to state 35
    intodervar   go to state 36


state 22

   42 args: list .

    $default  reduce using rule 42 (args)


state 23

   40 args: intodervar .

    $default  reduce using rule 40 (args)


state 24

   38 function: LABEL @4 OPA args . CPA
   39 args: args . COMMA args

    CPA    shift, and go to state 37
    COMMA  shift, and go to state 38


state 25

   14 entry: functionselect DOT LF entry .

    $default  reduce using rule 14 (entry)


state 26

   25 @3: .
   26 statement: VAR IS . @3 statement

    $default  reduce using rule 25 (@3)

    @3  go to state 39


state 27

   24 statement: VAR @2 . mathsym math
   29 mathsym: . GTE
   30        | . LTE
   31        | . LT
   32        | . GT
   33        | . PLUS
   34        | . MINUS
   35        | . MULTIPLY
   36        | . DIVIDE

    GT        shift, and go to state 40
    LT        shift, and go to state 41
    LTE       shift, and go to state 42
    GTE       shift, and go to state 43
    DIVIDE    shift, and go to state 44
    MULTIPLY  shift, and go to state 45
    MINUS     shift, and go to state 46
    PLUS      shift, and go to state 47

    mathsym  go to state 48


state 28

   18 rulelist: . statement COMMA rulelist
   18         | statement COMMA . rulelist
   19         | . statement
   20 @1: .  [INT, VAR, OPA]
   21 statement: . @1 math
   22          | . function
   24          | . VAR @2 mathsym math
   26          | . VAR IS @3 statement
   38 function: . LABEL @4 OPA args CPA

    LABEL  shift, and go to state 1
    VAR    shift, and go to state 12

    VAR       [reduce using rule 20 (@1)]
    $default  reduce using rule 20 (@1)

    rulelist   go to state 49
    statement  go to state 14
    @1         go to state 15
    function   go to state 16


state 29

   28 math: intodervar .

    $default  reduce using rule 28 (math)


state 30

   21 statement: @1 math .  [COMMA, DOT]
   27 math: math . mathsym math
   29 mathsym: . GTE
   30        | . LTE
   31        | . LT
   32        | . GT
   33        | . PLUS
   34        | . MINUS
   35        | . MULTIPLY
   36        | . DIVIDE

    GT        shift, and go to state 40
    LT        shift, and go to state 41
    LTE       shift, and go to state 42
    GTE       shift, and go to state 43
    DIVIDE    shift, and go to state 44
    MULTIPLY  shift, and go to state 45
    MINUS     shift, and go to state 46
    PLUS      shift, and go to state 47

    $default  reduce using rule 21 (statement)

    mathsym  go to state 50


state 31

   13 intodervar: OPA INT . CPA

    CPA  shift, and go to state 51


state 32

   10 listodervar: list .

    $default  reduce using rule 10 (listodervar)


state 33

    1 list: OBR innerlist . CBR

    CBR  shift, and go to state 52


state 34

    2 innerlist: element . PIPE listodervar
    3          | element .  [CBR]

    PIPE  shift, and go to state 53

    $default  reduce using rule 3 (innerlist)


state 35

    4 element: listodervar .  [PIPE, CBR]
    5        | listodervar . COMMA endingelement

    COMMA  shift, and go to state 54

    $default  reduce using rule 4 (element)


state 36

    9 listodervar: intodervar .

    $default  reduce using rule 9 (listodervar)


state 37

   38 function: LABEL @4 OPA args CPA .

    $default  reduce using rule 38 (function)


state 38

    1 list: . OBR innerlist CBR
   11 intodervar: . INT
   12           | . VAR
   13           | . OPA INT CPA
   39 args: . args COMMA args
   39     | args COMMA . args
   40     | . intodervar
   41     | . LABEL
   42     | . list

    LABEL  shift, and go to state 17
    INT    shift, and go to state 18
    VAR    shift, and go to state 19
    OPA    shift, and go to state 20
    OBR    shift, and go to state 21

    list        go to state 22
    intodervar  go to state 23
    args        go to state 55


state 39

   20 @1: .  [INT, VAR, OPA]
   21 statement: . @1 math
   22          | . function
   24          | . VAR @2 mathsym math
   26          | . VAR IS @3 statement
   26          | VAR IS @3 . statement
   38 function: . LABEL @4 OPA args CPA

    LABEL  shift, and go to state 1
    VAR    shift, and go to state 12

    VAR       [reduce using rule 20 (@1)]
    $default  reduce using rule 20 (@1)

    statement  go to state 56
    @1         go to state 15
    function   go to state 16


state 40

   32 mathsym: GT .

    $default  reduce using rule 32 (mathsym)


state 41

   31 mathsym: LT .

    $default  reduce using rule 31 (mathsym)


state 42

   30 mathsym: LTE .

    $default  reduce using rule 30 (mathsym)


state 43

   29 mathsym: GTE .

    $default  reduce using rule 29 (mathsym)


state 44

   36 mathsym: DIVIDE .

    $default  reduce using rule 36 (mathsym)


state 45

   35 mathsym: MULTIPLY .

    $default  reduce using rule 35 (mathsym)


state 46

   34 mathsym: MINUS .

    $default  reduce using rule 34 (mathsym)


state 47

   33 mathsym: PLUS .

    $default  reduce using rule 33 (mathsym)


state 48

   11 intodervar: . INT
   12           | . VAR
   13           | . OPA INT CPA
   24 statement: VAR @2 mathsym . math
   27 math: . math mathsym math
   28     | . intodervar

    INT  shift, and go to state 18
    VAR  shift, and go to state 19
    OPA  shift, and go to state 20

    intodervar  go to state 29
    math        go to state 57


state 49

   18 rulelist: statement COMMA rulelist .

    $default  reduce using rule 18 (rulelist)


state 50

   11 intodervar: . INT
   12           | . VAR
   13           | . OPA INT CPA
   27 math: . math mathsym math
   27     | math mathsym . math
   28     | . intodervar

    INT  shift, and go to state 18
    VAR  shift, and go to state 19
    OPA  shift, and go to state 20

    intodervar  go to state 29
    math        go to state 58


state 51

   13 intodervar: OPA INT CPA .

    $default  reduce using rule 13 (intodervar)


state 52

    1 list: OBR innerlist CBR .

    $default  reduce using rule 1 (list)


state 53

    1 list: . OBR innerlist CBR
    2 innerlist: element PIPE . listodervar
    9 listodervar: . intodervar
   10            | . list
   11 intodervar: . INT
   12           | . VAR
   13           | . OPA INT CPA

    INT  shift, and go to state 18
    VAR  shift, and go to state 19
    OPA  shift, and go to state 20
    OBR  shift, and go to state 21

    list         go to state 32
    listodervar  go to state 59
    intodervar   go to state 36


state 54

    1 list: . OBR innerlist CBR
    5 element: listodervar COMMA . endingelement
    7 endingelement: . listodervar
    8              | . listodervar COMMA endingelement
    9 listodervar: . intodervar
   10            | . list
   11 intodervar: . INT
   12           | . VAR
   13           | . OPA INT CPA

    INT  shift, and go to state 18
    VAR  shift, and go to state 19
    OPA  shift, and go to state 20
    OBR  shift, and go to state 21

    list           go to state 32
    endingelement  go to state 60
    listodervar    go to state 61
    intodervar     go to state 36


state 55

   39 args: args . COMMA args  [CPA, COMMA]
   39     | args COMMA args .  [CPA, COMMA]

    COMMA  shift, and go to state 38

    COMMA     [reduce using rule 39 (args)]
    $default  reduce using rule 39 (args)


state 56

   26 statement: VAR IS @3 statement .

    $default  reduce using rule 26 (statement)


state 57

   24 statement: VAR @2 mathsym math .  [COMMA, DOT]
   27 math: math . mathsym math
   29 mathsym: . GTE
   30        | . LTE
   31        | . LT
   32        | . GT
   33        | . PLUS
   34        | . MINUS
   35        | . MULTIPLY
   36        | . DIVIDE

    GT        shift, and go to state 40
    LT        shift, and go to state 41
    LTE       shift, and go to state 42
    GTE       shift, and go to state 43
    DIVIDE    shift, and go to state 44
    MULTIPLY  shift, and go to state 45
    MINUS     shift, and go to state 46
    PLUS      shift, and go to state 47

    $default  reduce using rule 24 (statement)

    mathsym  go to state 50


state 58

   27 math: math . mathsym math  [GT, LT, LTE, GTE, DIVIDE, MULTIPLY, MINUS, PLUS, COMMA, DOT]
   27     | math mathsym math .  [GT, LT, LTE, GTE, DIVIDE, MULTIPLY, MINUS, PLUS, COMMA, DOT]
   29 mathsym: . GTE
   30        | . LTE
   31        | . LT
   32        | . GT
   33        | . PLUS
   34        | . MINUS
   35        | . MULTIPLY
   36        | . DIVIDE

    GT        shift, and go to state 40
    LT        shift, and go to state 41
    LTE       shift, and go to state 42
    GTE       shift, and go to state 43
    DIVIDE    shift, and go to state 44
    MULTIPLY  shift, and go to state 45
    MINUS     shift, and go to state 46
    PLUS      shift, and go to state 47

    GT        [reduce using rule 27 (math)]
    LT        [reduce using rule 27 (math)]
    LTE       [reduce using rule 27 (math)]
    GTE       [reduce using rule 27 (math)]
    DIVIDE    [reduce using rule 27 (math)]
    MULTIPLY  [reduce using rule 27 (math)]
    MINUS     [reduce using rule 27 (math)]
    PLUS      [reduce using rule 27 (math)]
    $default  reduce using rule 27 (math)

    mathsym  go to state 50


state 59

    2 innerlist: element PIPE listodervar .

    $default  reduce using rule 2 (innerlist)


state 60

    5 element: listodervar COMMA endingelement .

    $default  reduce using rule 5 (element)


state 61

    7 endingelement: listodervar .  [PIPE, CBR]
    8              | listodervar . COMMA endingelement

    COMMA  shift, and go to state 62

    $default  reduce using rule 7 (endingelement)


state 62

    1 list: . OBR innerlist CBR
    7 endingelement: . listodervar
    8              | . listodervar COMMA endingelement
    8              | listodervar COMMA . endingelement
    9 listodervar: . intodervar
   10            | . list
   11 intodervar: . INT
   12           | . VAR
   13           | . OPA INT CPA

    INT  shift, and go to state 18
    VAR  shift, and go to state 19
    OPA  shift, and go to state 20
    OBR  shift, and go to state 21

    list           go to state 32
    endingelement  go to state 63
    listodervar    go to state 61
    intodervar     go to state 36


state 63

    8 endingelement: listodervar COMMA endingelement .

    $default  reduce using rule 8 (endingelement)
