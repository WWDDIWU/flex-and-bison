Terminals which are not used

   IF
   EQ
   WWDDIWU
   SEMICOLON


State 9 conflicts: 1 shift/reduce
State 28 conflicts: 1 shift/reduce
State 40 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce
State 59 conflicts: 8 shift/reduce


Grammar

    0 $accept: entry $end

    1 list: OBR innerlist CBR

    2 innerlist: element PIPE listodervar
    3          | element

    4 element: listodervar
    5        | listodervar COMMA endingelement
    6        | /* empty */

    7 endingelement: listodervar
    8              | listodervar COMMA endingelement

    9 listodervar: intodervar
   10            | list

   11 intodervar: INT
   12           | VAR
   13           | OPA INT CPA

   14 @1: /* empty */

   15 entry: functionselect DOT @1 LF entry
   16      | slash

   17 functionselect: function CD rulelist
   18               | function

   19 rulelist: statement COMMA rulelist
   20         | statement

   21 @2: /* empty */

   22 statement: @2 math
   23          | function

   24 @3: /* empty */

   25 statement: VAR @3 mathsym math

   26 @4: /* empty */

   27 statement: VAR IS @4 statement

   28 math: math mathsym math
   29     | intodervar

   30 mathsym: GTE
   31        | LTE
   32        | LT
   33        | GT
   34        | PLUS
   35        | MINUS
   36        | MULTIPLY
   37        | DIVIDE

   38 @5: /* empty */

   39 function: LABEL @5 OPA args CPA

   40 args: args COMMA args
   41     | intodervar
   42     | LABEL
   43     | list


Terminals, with rules where they appear

$end (0) 0
error (256)
IS (258) 27
GT (259) 33
LT (260) 32
LTE (261) 31
GTE (262) 30
DIVIDE (263) 37
MULTIPLY (264) 36
MINUS (265) 35
PLUS (266) 34
LABEL (267) 39 42
INT (268) 11 13
VAR (269) 12 25 27
OPA (270) 13 39
CPA (271) 13 39
COMMA (272) 5 8 19 40
IF (273)
EQ (274)
PIPE (275) 2
LF (276) 15
WWDDIWU (277)
OBR (278) 1
CBR (279) 1
DOT (280) 15
CD (281) 17
SEMICOLON (282)
slash (283) 16


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
list (30)
    on left: 1, on right: 10 43
innerlist (31)
    on left: 2 3, on right: 1
element (32)
    on left: 4 5 6, on right: 2 3
endingelement (33)
    on left: 7 8, on right: 5 8
listodervar (34)
    on left: 9 10, on right: 2 4 5 7 8
intodervar (35)
    on left: 11 12 13, on right: 9 29 41
entry (36)
    on left: 15 16, on right: 0 15
@1 (37)
    on left: 14, on right: 15
functionselect (38)
    on left: 17 18, on right: 15
rulelist (39)
    on left: 19 20, on right: 17 19
statement (40)
    on left: 22 23 25 27, on right: 19 20 27
@2 (41)
    on left: 21, on right: 22
@3 (42)
    on left: 24, on right: 25
@4 (43)
    on left: 26, on right: 27
math (44)
    on left: 28 29, on right: 22 25 28
mathsym (45)
    on left: 30 31 32 33 34 35 36 37, on right: 25 28
function (46)
    on left: 39, on right: 17 18 23
@5 (47)
    on left: 38, on right: 39
args (48)
    on left: 40 41 42 43, on right: 39 40


state 0

    0 $accept: . entry $end
   15 entry: . functionselect DOT @1 LF entry
   16      | . slash
   17 functionselect: . function CD rulelist
   18               | . function
   39 function: . LABEL @5 OPA args CPA

    LABEL  shift, and go to state 1
    slash  shift, and go to state 2

    entry           go to state 3
    functionselect  go to state 4
    function        go to state 5


state 1

   38 @5: .
   39 function: LABEL . @5 OPA args CPA

    $default  reduce using rule 38 (@5)

    @5  go to state 6


state 2

   16 entry: slash .

    $default  reduce using rule 16 (entry)


state 3

    0 $accept: entry . $end

    $end  shift, and go to state 7


state 4

   15 entry: functionselect . DOT @1 LF entry

    DOT  shift, and go to state 8


state 5

   17 functionselect: function . CD rulelist
   18               | function .  [DOT]

    CD  shift, and go to state 9

    $default  reduce using rule 18 (functionselect)


state 6

   39 function: LABEL @5 . OPA args CPA

    OPA  shift, and go to state 10


state 7

    0 $accept: entry $end .

    $default  accept


state 8

   14 @1: .
   15 entry: functionselect DOT . @1 LF entry

    $default  reduce using rule 14 (@1)

    @1  go to state 11


state 9

   17 functionselect: function CD . rulelist
   19 rulelist: . statement COMMA rulelist
   20         | . statement
   21 @2: .  [INT, VAR, OPA]
   22 statement: . @2 math
   23          | . function
   25          | . VAR @3 mathsym math
   27          | . VAR IS @4 statement
   39 function: . LABEL @5 OPA args CPA

    LABEL  shift, and go to state 1
    VAR    shift, and go to state 12

    VAR       [reduce using rule 21 (@2)]
    $default  reduce using rule 21 (@2)

    rulelist   go to state 13
    statement  go to state 14
    @2         go to state 15
    function   go to state 16


state 10

    1 list: . OBR innerlist CBR
   11 intodervar: . INT
   12           | . VAR
   13           | . OPA INT CPA
   39 function: LABEL @5 OPA . args CPA
   40 args: . args COMMA args
   41     | . intodervar
   42     | . LABEL
   43     | . list

    LABEL  shift, and go to state 17
    INT    shift, and go to state 18
    VAR    shift, and go to state 19
    OPA    shift, and go to state 20
    OBR    shift, and go to state 21

    list        go to state 22
    intodervar  go to state 23
    args        go to state 24


state 11

   15 entry: functionselect DOT @1 . LF entry

    LF  shift, and go to state 25


state 12

   24 @3: .  [GT, LT, LTE, GTE, DIVIDE, MULTIPLY, MINUS, PLUS]
   25 statement: VAR . @3 mathsym math
   27          | VAR . IS @4 statement

    IS  shift, and go to state 26

    $default  reduce using rule 24 (@3)

    @3  go to state 27


state 13

   17 functionselect: function CD rulelist .

    $default  reduce using rule 17 (functionselect)


state 14

   19 rulelist: statement . COMMA rulelist
   20         | statement .  [DOT]

    COMMA  shift, and go to state 28

    $default  reduce using rule 20 (rulelist)


state 15

   11 intodervar: . INT
   12           | . VAR
   13           | . OPA INT CPA
   22 statement: @2 . math
   28 math: . math mathsym math
   29     | . intodervar

    INT  shift, and go to state 18
    VAR  shift, and go to state 19
    OPA  shift, and go to state 20

    intodervar  go to state 29
    math        go to state 30


state 16

   23 statement: function .

    $default  reduce using rule 23 (statement)


state 17

   42 args: LABEL .

    $default  reduce using rule 42 (args)


state 18

   11 intodervar: INT .

    $default  reduce using rule 11 (intodervar)


state 19

   12 intodervar: VAR .

    $default  reduce using rule 12 (intodervar)


state 20

   13 intodervar: OPA . INT CPA

    INT  shift, and go to state 31


state 21

    1 list: . OBR innerlist CBR
    1     | OBR . innerlist CBR
    2 innerlist: . element PIPE listodervar
    3          | . element
    4 element: . listodervar
    5        | . listodervar COMMA endingelement
    6        | .  [PIPE, CBR]
    9 listodervar: . intodervar
   10            | . list
   11 intodervar: . INT
   12           | . VAR
   13           | . OPA INT CPA

    INT  shift, and go to state 18
    VAR  shift, and go to state 19
    OPA  shift, and go to state 20
    OBR  shift, and go to state 21

    $default  reduce using rule 6 (element)

    list         go to state 32
    innerlist    go to state 33
    element      go to state 34
    listodervar  go to state 35
    intodervar   go to state 36


state 22

   43 args: list .

    $default  reduce using rule 43 (args)


state 23

   41 args: intodervar .

    $default  reduce using rule 41 (args)


state 24

   39 function: LABEL @5 OPA args . CPA
   40 args: args . COMMA args

    CPA    shift, and go to state 37
    COMMA  shift, and go to state 38


state 25

   15 entry: . functionselect DOT @1 LF entry
   15      | functionselect DOT @1 LF . entry
   16      | . slash
   17 functionselect: . function CD rulelist
   18               | . function
   39 function: . LABEL @5 OPA args CPA

    LABEL  shift, and go to state 1
    slash  shift, and go to state 2

    entry           go to state 39
    functionselect  go to state 4
    function        go to state 5


state 26

   26 @4: .
   27 statement: VAR IS . @4 statement

    $default  reduce using rule 26 (@4)

    @4  go to state 40


state 27

   25 statement: VAR @3 . mathsym math
   30 mathsym: . GTE
   31        | . LTE
   32        | . LT
   33        | . GT
   34        | . PLUS
   35        | . MINUS
   36        | . MULTIPLY
   37        | . DIVIDE

    GT        shift, and go to state 41
    LT        shift, and go to state 42
    LTE       shift, and go to state 43
    GTE       shift, and go to state 44
    DIVIDE    shift, and go to state 45
    MULTIPLY  shift, and go to state 46
    MINUS     shift, and go to state 47
    PLUS      shift, and go to state 48

    mathsym  go to state 49


state 28

   19 rulelist: . statement COMMA rulelist
   19         | statement COMMA . rulelist
   20         | . statement
   21 @2: .  [INT, VAR, OPA]
   22 statement: . @2 math
   23          | . function
   25          | . VAR @3 mathsym math
   27          | . VAR IS @4 statement
   39 function: . LABEL @5 OPA args CPA

    LABEL  shift, and go to state 1
    VAR    shift, and go to state 12

    VAR       [reduce using rule 21 (@2)]
    $default  reduce using rule 21 (@2)

    rulelist   go to state 50
    statement  go to state 14
    @2         go to state 15
    function   go to state 16


state 29

   29 math: intodervar .

    $default  reduce using rule 29 (math)


state 30

   22 statement: @2 math .  [COMMA, DOT]
   28 math: math . mathsym math
   30 mathsym: . GTE
   31        | . LTE
   32        | . LT
   33        | . GT
   34        | . PLUS
   35        | . MINUS
   36        | . MULTIPLY
   37        | . DIVIDE

    GT        shift, and go to state 41
    LT        shift, and go to state 42
    LTE       shift, and go to state 43
    GTE       shift, and go to state 44
    DIVIDE    shift, and go to state 45
    MULTIPLY  shift, and go to state 46
    MINUS     shift, and go to state 47
    PLUS      shift, and go to state 48

    $default  reduce using rule 22 (statement)

    mathsym  go to state 51


state 31

   13 intodervar: OPA INT . CPA

    CPA  shift, and go to state 52


state 32

   10 listodervar: list .

    $default  reduce using rule 10 (listodervar)


state 33

    1 list: OBR innerlist . CBR

    CBR  shift, and go to state 53


state 34

    2 innerlist: element . PIPE listodervar
    3          | element .  [CBR]

    PIPE  shift, and go to state 54

    $default  reduce using rule 3 (innerlist)


state 35

    4 element: listodervar .  [PIPE, CBR]
    5        | listodervar . COMMA endingelement

    COMMA  shift, and go to state 55

    $default  reduce using rule 4 (element)


state 36

    9 listodervar: intodervar .

    $default  reduce using rule 9 (listodervar)


state 37

   39 function: LABEL @5 OPA args CPA .

    $default  reduce using rule 39 (function)


state 38

    1 list: . OBR innerlist CBR
   11 intodervar: . INT
   12           | . VAR
   13           | . OPA INT CPA
   40 args: . args COMMA args
   40     | args COMMA . args
   41     | . intodervar
   42     | . LABEL
   43     | . list

    LABEL  shift, and go to state 17
    INT    shift, and go to state 18
    VAR    shift, and go to state 19
    OPA    shift, and go to state 20
    OBR    shift, and go to state 21

    list        go to state 22
    intodervar  go to state 23
    args        go to state 56


state 39

   15 entry: functionselect DOT @1 LF entry .

    $default  reduce using rule 15 (entry)


state 40

   21 @2: .  [INT, VAR, OPA]
   22 statement: . @2 math
   23          | . function
   25          | . VAR @3 mathsym math
   27          | . VAR IS @4 statement
   27          | VAR IS @4 . statement
   39 function: . LABEL @5 OPA args CPA

    LABEL  shift, and go to state 1
    VAR    shift, and go to state 12

    VAR       [reduce using rule 21 (@2)]
    $default  reduce using rule 21 (@2)

    statement  go to state 57
    @2         go to state 15
    function   go to state 16


state 41

   33 mathsym: GT .

    $default  reduce using rule 33 (mathsym)


state 42

   32 mathsym: LT .

    $default  reduce using rule 32 (mathsym)


state 43

   31 mathsym: LTE .

    $default  reduce using rule 31 (mathsym)


state 44

   30 mathsym: GTE .

    $default  reduce using rule 30 (mathsym)


state 45

   37 mathsym: DIVIDE .

    $default  reduce using rule 37 (mathsym)


state 46

   36 mathsym: MULTIPLY .

    $default  reduce using rule 36 (mathsym)


state 47

   35 mathsym: MINUS .

    $default  reduce using rule 35 (mathsym)


state 48

   34 mathsym: PLUS .

    $default  reduce using rule 34 (mathsym)


state 49

   11 intodervar: . INT
   12           | . VAR
   13           | . OPA INT CPA
   25 statement: VAR @3 mathsym . math
   28 math: . math mathsym math
   29     | . intodervar

    INT  shift, and go to state 18
    VAR  shift, and go to state 19
    OPA  shift, and go to state 20

    intodervar  go to state 29
    math        go to state 58


state 50

   19 rulelist: statement COMMA rulelist .

    $default  reduce using rule 19 (rulelist)


state 51

   11 intodervar: . INT
   12           | . VAR
   13           | . OPA INT CPA
   28 math: . math mathsym math
   28     | math mathsym . math
   29     | . intodervar

    INT  shift, and go to state 18
    VAR  shift, and go to state 19
    OPA  shift, and go to state 20

    intodervar  go to state 29
    math        go to state 59


state 52

   13 intodervar: OPA INT CPA .

    $default  reduce using rule 13 (intodervar)


state 53

    1 list: OBR innerlist CBR .

    $default  reduce using rule 1 (list)


state 54

    1 list: . OBR innerlist CBR
    2 innerlist: element PIPE . listodervar
    9 listodervar: . intodervar
   10            | . list
   11 intodervar: . INT
   12           | . VAR
   13           | . OPA INT CPA

    INT  shift, and go to state 18
    VAR  shift, and go to state 19
    OPA  shift, and go to state 20
    OBR  shift, and go to state 21

    list         go to state 32
    listodervar  go to state 60
    intodervar   go to state 36


state 55

    1 list: . OBR innerlist CBR
    5 element: listodervar COMMA . endingelement
    7 endingelement: . listodervar
    8              | . listodervar COMMA endingelement
    9 listodervar: . intodervar
   10            | . list
   11 intodervar: . INT
   12           | . VAR
   13           | . OPA INT CPA

    INT  shift, and go to state 18
    VAR  shift, and go to state 19
    OPA  shift, and go to state 20
    OBR  shift, and go to state 21

    list           go to state 32
    endingelement  go to state 61
    listodervar    go to state 62
    intodervar     go to state 36


state 56

   40 args: args . COMMA args  [CPA, COMMA]
   40     | args COMMA args .  [CPA, COMMA]

    COMMA  shift, and go to state 38

    COMMA     [reduce using rule 40 (args)]
    $default  reduce using rule 40 (args)


state 57

   27 statement: VAR IS @4 statement .

    $default  reduce using rule 27 (statement)


state 58

   25 statement: VAR @3 mathsym math .  [COMMA, DOT]
   28 math: math . mathsym math
   30 mathsym: . GTE
   31        | . LTE
   32        | . LT
   33        | . GT
   34        | . PLUS
   35        | . MINUS
   36        | . MULTIPLY
   37        | . DIVIDE

    GT        shift, and go to state 41
    LT        shift, and go to state 42
    LTE       shift, and go to state 43
    GTE       shift, and go to state 44
    DIVIDE    shift, and go to state 45
    MULTIPLY  shift, and go to state 46
    MINUS     shift, and go to state 47
    PLUS      shift, and go to state 48

    $default  reduce using rule 25 (statement)

    mathsym  go to state 51


state 59

   28 math: math . mathsym math  [GT, LT, LTE, GTE, DIVIDE, MULTIPLY, MINUS, PLUS, COMMA, DOT]
   28     | math mathsym math .  [GT, LT, LTE, GTE, DIVIDE, MULTIPLY, MINUS, PLUS, COMMA, DOT]
   30 mathsym: . GTE
   31        | . LTE
   32        | . LT
   33        | . GT
   34        | . PLUS
   35        | . MINUS
   36        | . MULTIPLY
   37        | . DIVIDE

    GT        shift, and go to state 41
    LT        shift, and go to state 42
    LTE       shift, and go to state 43
    GTE       shift, and go to state 44
    DIVIDE    shift, and go to state 45
    MULTIPLY  shift, and go to state 46
    MINUS     shift, and go to state 47
    PLUS      shift, and go to state 48

    GT        [reduce using rule 28 (math)]
    LT        [reduce using rule 28 (math)]
    LTE       [reduce using rule 28 (math)]
    GTE       [reduce using rule 28 (math)]
    DIVIDE    [reduce using rule 28 (math)]
    MULTIPLY  [reduce using rule 28 (math)]
    MINUS     [reduce using rule 28 (math)]
    PLUS      [reduce using rule 28 (math)]
    $default  reduce using rule 28 (math)

    mathsym  go to state 51


state 60

    2 innerlist: element PIPE listodervar .

    $default  reduce using rule 2 (innerlist)


state 61

    5 element: listodervar COMMA endingelement .

    $default  reduce using rule 5 (element)


state 62

    7 endingelement: listodervar .  [PIPE, CBR]
    8              | listodervar . COMMA endingelement

    COMMA  shift, and go to state 63

    $default  reduce using rule 7 (endingelement)


state 63

    1 list: . OBR innerlist CBR
    7 endingelement: . listodervar
    8              | . listodervar COMMA endingelement
    8              | listodervar COMMA . endingelement
    9 listodervar: . intodervar
   10            | . list
   11 intodervar: . INT
   12           | . VAR
   13           | . OPA INT CPA

    INT  shift, and go to state 18
    VAR  shift, and go to state 19
    OPA  shift, and go to state 20
    OBR  shift, and go to state 21

    list           go to state 32
    endingelement  go to state 64
    listodervar    go to state 62
    intodervar     go to state 36


state 64

    8 endingelement: listodervar COMMA endingelement .

    $default  reduce using rule 8 (endingelement)
